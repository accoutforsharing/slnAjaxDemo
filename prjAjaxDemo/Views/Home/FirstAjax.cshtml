
@{
    ViewData["Title"] = "FirstAjax";
}

<h1>FirstAjax</h1>
<input type="text" placeholder="name" id="inputname">
<input type="number" placeholder="age" id="inputage">
<input type="button" value="Load" id="button1">
<input type="button" value="Stop" id="button2">
<div id="div1"></div>
@*<img src="~/Images/cat1.jpg">
<img src="~/Images/dog2.jpg">*@
@{ 

}
@section Scripts{ 
    <script>
    const name = document.querySelector("#inputname");
    const age = document.querySelector("#inputage");
    const btnLoad = document.querySelector("#button1");
    const btnStop = document.querySelector("#button2");
    const divMessage = document.querySelector("#div1");

    //Step1 : 建立Ajax物件
    const xhr = new XMLHttpRequest();
    btnLoad.addEventListener('click', () => {

        //Step3 : 接收伺服器回傳的結果(Response)
        //load事件表示伺服器(Server端)已經回傳結果到瀏覽器(Client端)
        xhr.addEventListener("load", () => {
            //接收結果顯示在div中
            divMessage.innerHTML = xhr.responseText;
        })

        //Ajax 開始
        xhr.addEventListener("loadstart", () => {
            console.log("loadstart");
            btnLoad.value = "loading……";
            btnLoad.setAttribute('disabled', 'disabled');
        })

        //Ajax 結束
        xhr.addEventListener("loadend", () => {
            console.log("loadend");
            btnLoad.value = "Load";
            btnLoad.removeAttribute('disabled');
        })

        //timeout設定的時間到了，伺服器還沒傳回結果
        xhr.addEventListener('timeout', () => {
            console.log("timeout");
            divMessage.innerHTML = "伺服器忙碌中，請稍後再試";
        })

        //abort()方法執行是會觸發abort事件
        xhr.addEventListener('abort', () => {
            console.log("abort");
            divMessage.innerHTML = "您取消了這次執行";
        })

        //Step2 : 對伺服器發出要求(Request)
        @*@Url.Action()
        @Url.Content()*@

        @*const url = "@Url.Action("Index", "api")";*@
        const url = "@Url.Content("~/api/index")";
        const params = `?name=${name.value}&age=${age.value}`;

        //xhr.open("GET", `/api/index?name=${name.value}&age=${age.value}`);      //打開瀏覽器輸入網址
        xhr.open("GET", `${url}${params}`);
        //xhr.timeout = 5000;     //超過時間伺服器沒有回應，停止程式的執行
        xhr.send();     //按下[enter]
    })

    btnStop.addEventListener('click', () => {
        xhr.abort();
    })
    </script>
}
